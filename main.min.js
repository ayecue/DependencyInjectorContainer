!function(a,b){var c=b(),d="function"==typeof define&&define.amd,e="undefined"!=typeof module&&module.exports;d?define(c):e?module.exports=c:window[a]=c}("DependencyInjectorContainer",function(){function a(a){this.scope=a||{}}return a.prototype.set=function(a,b,c){if("string"!=typeof b)throw new TypeError("Second argument must be string");if(c!==!0&&this.scope.hasOwnProperty(b)===!0)throw new Error(b+" is aready defined");return this.scope[b]=a,this},a.prototype.extend=function(a,b,c){return"function"==typeof b&&(c=b,b=void 0),c.__dependencies__=b||[],c.isDefinition=!0,this.set(c,a),this},a.prototype.get=function(a){if("string"!=typeof a)throw new TypeError("Namespace has to be a string");if("undefined"==typeof this.scope[a])throw new Error(a+" not found");return this.scope[a]},a.prototype.load=function(){for(var a=Object.keys(this.scope).filter(function(a){return this.get(a).isDefinition===!0},this),b=[],c=function(c){var d=[];return c.forEach(function(c){var e=a.some(function(a){return a!==c&&-1!==this.get(a).__dependencies__.indexOf(c)?-1!==this.get(c).__dependencies__.indexOf(a)?void console.error("Cyclic dependency in "+c+" and "+a+"."):!0:void 0},this);e===!0?d.push(c):b.unshift(c)},this),d}.bind(this);a.length>0;)a=c(a);return b.forEach(function(a){var b=this.get(a),c=b.__dependencies__,d=c.map(function(a){var b=this.get(a);return b.isDefinition===!0&&console.warn("Module "+a+" is not initialized."),b},this);try{this.set(b.apply(this,d)||{},a,!0)}catch(e){console.error(a,e)}},this),this},a});